apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: PROJECT9-APPLE9-eap7
  xpaas: 1.0.0
metadata:
  annotations:
    description: sample9 OCP EAP7.3 PROJECT9-APPLE9 Template
    iconClass: icon-eap
    openshift.io/display-name: sample9 OCP EAP7.3 PROJECT9-APPLE9 Template
    openshift.io/provider-display-name: OPENSHIFT
    tags: eap7,redhat,PROJECT9-APPLE9-eap
    version: "1.0.0"
  name: PROJECT9-APPLE9-eap7
  namespace: openshift
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-http
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_HTTP}
    path: /
    port:
      targetPort: 8080-tcp
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      dockerStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          name: eap73-jdk8:latest
          namespace: openshift
      type: Docker
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: OPENSHIFT_KUBE_PING_LABELS
            value: application=${APPLICATION_NAME}
          - name: JAVA_OPTS
            value: ${JAVA_OPTS}
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /logs
              name: ${JBOSS_LOG_PVC_NAME}
            - mountPath: /deployments
              name: ${JBOSS_APP_PVC_NAME}
        terminationGracePeriodSeconds: 60
        volumes:
          - name: ${JBOSS_LOG_PVC_NAME}
            persistentVolumeClaim:
              claimName: ${JBOSS_LOG_PVC_NAME}
          - name: ${JBOSS_APP_PVC_NAME}
            persistentVolumeClaim:
              claimName: ${JBOSS_APP_PVC_NAME}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: PROJECT9-APPLE9
- description: 'Custom hostname for http service route.  Leave blank for default hostname,
    e.g.: <application-name>-<project>.<default-domain-suffix>'
  displayName: Custom http Route Hostname
  name: HOSTNAME_HTTP
  required: true
  value: PROJECT9-APPLE9.ocp4.wstest.com
- description: JBOSS LOG PVC Name
  displayName: JBOSS LOG PVC Name
  name: JBOSS_LOG_PVC_NAME
  required: true
  value: PROJECT9-APPLE9-logs-pvc
- description: JBOSS APP PVC Name
  displayName: JBOSS APP PVC Name
  name: JBOSS_APP_PVC_NAME
  required: true
  value: PROJECT9-APPLE9-app-pvc
- description: 'Git Repository URL'
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: http://gitlab.wstest.com:8080/wsjeong/wstest-eap73.git
- description: GitHub trigger secret
  displayName: Github Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: Generic build trigger secret
  displayName: Generic Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
- description: Java Options -DHOSTNAME=$HOSTNAME -Xms1024m -Xmx2048m -XX:+UseParallelOldGC
    -verbose:gc -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -XX:+PrintHeapAtGC -Xloggc:/opt/webserver/logs/gc_${HOSTNAME}.log
    -XX:-HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/opt/webserver/logs/java_pid_${HOSTNAME}.hprof
    -XX:+ExplicitGCInvokesConcurrent -Duser.timezone=GMT+09:00
  displayName: JAVA_OPTS
  name: JAVA_OPTS
  value: -DHOSTNAME=$HOSTNAME -Xms256m -Xmx512m -XX:+UseParallelOldGC -XX:MaxMetaspaceSize=512m
    -verbose:gc -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -XX:+PrintHeapAtGC -Xloggc:/logs/gc_${HOSTNAME}.log
    -XX:-HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/logs/java_pid_${HOSTNAME}.hprof
    -XX:+ExplicitGCInvokesConcurrent -Djboss.server.log.dir=/logs -Duser.timezone=GMT+09:00
    -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
- description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  displayName: ImageStream Namespace
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
